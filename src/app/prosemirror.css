.ProseMirror .is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

.ProseMirror .is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

/* Custom image styles */
.ProseMirror img {
  transition: filter 0.1s ease-in-out;
  max-width: 100%;
  height: auto;

  &:hover {
    cursor: pointer;
    filter: brightness(90%);
  }

  &.ProseMirror-selectednode {
    outline: 2px solid hsl(var(--primary));
    filter: brightness(90%);
  }
}

/* 이미지 로딩 플레이스홀더 */
.img-placeholder {
  position: relative;

  &:before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    border: 2px solid hsl(var(--muted));
    border-top-color: hsl(var(--foreground));
    animation: spinning 0.6s linear infinite;
  }
}

@keyframes spinning {
  to {
    transform: rotate(360deg);
  }
}

/* 기본 텍스트 스타일 */
.ProseMirror {
  font-size: 0.875rem;
  line-height: 1.5;
}

/* 제목 스타일 */
.ProseMirror h1 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.75;
  margin: 1rem 0;
}

.ProseMirror h2 {
  font-size: 1.25rem;
  font-weight: 600;
  line-height: 1.75;
  margin: 0.875rem 0;
}

.ProseMirror h3 {
  font-size: 1.125rem;
  font-weight: 600;
  line-height: 1.75;
  margin: 0.75rem 0;
}

/* 선택된 노드 스타일 */
.ProseMirror:not(.dragging) .ProseMirror-selectednode {
  outline: none !important;
  background-color: hsl(var(--accent));
  transition: background-color 0.2s;
}

/* 드래그 핸들 스타일 */
.drag-handle {
  position: fixed;
  opacity: 1;
  transition: opacity ease-in 0.2s;
  border-radius: var(--radius);
  background-color: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  padding: 0.25rem;
  width: 1rem;
  height: 1.25rem;
  z-index: 50;
  cursor: grab;

  &:hover {
    background-color: hsl(var(--accent));
    transition: background-color 0.2s;
  }

  &:active {
    cursor: grabbing;
  }

  &.hide {
    opacity: 0;
    pointer-events: none;
  }

  @media screen and (max-width: 600px) {
    display: none;
    pointer-events: none;
  }
}

/* Tippy 박스 최대 너비 */
.tippy-box {
  max-width: 400px !important;
}

/* TaskList 스타일 */
.ProseMirror ul[data-type="taskList"] {
  list-style: none;
  padding: 0;
}

.ProseMirror li[data-type="taskItem"] {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  margin: 0.5rem 0;
}

.ProseMirror li[data-type="taskItem"] > label {
  margin-top: 0.25rem;
}

.ProseMirror li[data-type="taskItem"] > div {
  flex: 1;
}

.ProseMirror li[data-type="taskItem"] input[type="checkbox"] {
  appearance: none;
  background-color: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: 0.25rem;
  width: 1rem;
  height: 1rem;
  cursor: pointer;
  position: relative;
}

.ProseMirror li[data-type="taskItem"] input[type="checkbox"]:checked {
  background-color: hsl(var(--primary));
  border-color: hsl(var(--primary));
}

.ProseMirror li[data-type="taskItem"] input[type="checkbox"]:checked::after {
  content: "";
  position: absolute;
  left: 4px;
  top: 1px;
  width: 4px;
  height: 8px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.ProseMirror li[data-type="taskItem"] input[type="checkbox"]:focus {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

.ProseMirror li[data-type="taskItem"] input[type="checkbox"]:hover {
  background-color: hsl(var(--accent));
}

.ProseMirror li[data-type="taskItem"] p {
  margin: 0;
}

.ProseMirror code::before,
.ProseMirror code::after {
  content: none !important;
}
